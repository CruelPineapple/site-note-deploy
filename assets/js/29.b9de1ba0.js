(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{384:function(t,a,r){"use strict";r.r(a);var s=r(45),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"number类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#number类型"}},[t._v("#")]),t._v(" Number类型")]),t._v(" "),r("h2",{attrs:{id:"_0-1-0-2-0-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-0-2-0-3"}},[t._v("#")]),t._v(" 0.1 + 0.2 == 0.3 ？")]),t._v(" "),r("p",[t._v("浮点数是二进制保存的，因此会出现不能用有限位数表达的问题，存在一个舍入过程，此时0.1和0.2的值就发生了偏差，导致相加结果也存在偏差")]),t._v(" "),r("h2",{attrs:{id:"nan"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[t._v("#")]),t._v(" NaN")]),t._v(" "),r("p",[t._v("isNaN()可以判断传入参数是否不是数值。"),r("br"),t._v("\n会先尝试将该参数转换为数值，例如true会被转换为1，“1”也会被认为是数值"),r("br"),t._v("\n用isNaN判断一个对象，会先调用对象的valueOf方法，判断其返回值，如果返回值不是数值，会再调用toString方法进行一次判断")]),t._v(" "),r("h2",{attrs:{id:"数值范围"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数值范围"}},[t._v("#")]),t._v(" 数值范围")]),t._v(" "),r("p",[t._v("超出最大范围的数值会被转换为infinity，且不再参与运算")])])}),[],!1,null,null,null);a.default=e.exports}}]);