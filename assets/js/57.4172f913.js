(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{412:function(t,s,a){"use strict";a.r(s);var n=a(45),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"错误处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),a("p",[t._v("通过try-catch语句处理错误，如有需要，finally提供总能执行的部分。")]),t._v(" "),a("p",[t._v("7种错误类型：Error（基础类型），EvalError，RangeError，ReferenceError，SyntaxError，TypeError，URIError。")]),t._v(" "),a("p",[t._v("EvalError发生在错误使用eval方法的时候")]),t._v(" "),a("p",[t._v("RangeError发生在数值超出范围的时候，例如为数组指定一个负的项数")]),t._v(" "),a("p",[t._v("后面三种比较常见，引用错误（找不到对象），句法错误，类型错误")]),t._v(" "),a("p",[t._v("URIError发生在使用encodeURI和decodeURI的时候，URI格式不正确的情况")]),t._v(" "),a("p",[t._v("通常的错误处理：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TypeError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理类型错误")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReferenceError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理引用错误")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理其他错误")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"抛出错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抛出错误"}},[t._v("#")]),t._v(" 抛出错误")]),t._v(" "),a("p",[t._v("使用throw抛出一个错误。代码遇到throw会立刻停下来，仅当有try-catch语句将其捕获才会继续执行。")]),t._v(" "),a("p",[t._v("可以throw任何东西，如果需要throw错误，就new一个错误对象，并传入自定义错误消息：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SyntaxError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I don\'t like your syntax"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("还可以通过原型链创建自定义错误类型：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CustomError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CunstomeError"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"抛出错误的时机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抛出错误的时机"}},[t._v("#")]),t._v(" 抛出错误的时机")]),t._v(" "),a("p",[t._v("浏览器自己抛的错误比较难让人确定错误，比较好的是自己检查然后抛出错误。良好的错误处理机制应该可以确保只发生开发者抛出的错误")]),t._v(" "),a("h3",{attrs:{id:"错误事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误事件"}},[t._v("#")]),t._v(" 错误事件")]),t._v(" "),a("p",[t._v("任何没有通过try-catch处理的错误都会触发window对象的error事件，可以指定onerror事件处理程序：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("此方法没有遵循DOM2事件的标准格式。返回false的话，此函数就充当了整个文档的try-catch语句，所有无代码处理的运行时错误都会在被交给浏览器之前遭到此函数的拦截。但是尽量不要这么搞，因为适当的try-catch就能拦住所有的错误了。")]),t._v(" "),a("p",[t._v("图片的url出错也会抛出错误")]),t._v(" "),a("h2",{attrs:{id:"常见错误类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见错误类型"}},[t._v("#")]),t._v(" 常见错误类型")]),t._v(" "),a("h3",{attrs:{id:"类型转换错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换错误"}},[t._v("#")]),t._v(" 类型转换错误")]),t._v(" "),a("p",[t._v("使用某操作符或是其他可能自动转换数据类型的语言结构时，在使用相等和不相等操作符，或者在逻辑判断语句中使用非布尔值的时候，容易发生类型转换错误")]),t._v(" "),a("p",[t._v("避免判等时的错误，多使用全等符号，避免流控制语句时发生错误，需要仔细考虑自动转换为布尔值的特性：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" str3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v('上面的例子中，str3作为拼接函数的可选参数，需要进行检测，然而这样的检测当str3为数值0的时候会被转换为false，而数值1会被转换为true。比较恰当的判断是使用typeof str3 == "string"。')]),t._v(" "),a("h3",{attrs:{id:"数据类型错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型错误"}},[t._v("#")]),t._v(" 数据类型错误")]),t._v(" "),a("p",[t._v("js是松散类型的，在使用变量和函数参数之前，不会确保它们的类型正确。因此在函数中最好使用类型检查来确保安全。")]),t._v(" "),a("h3",{attrs:{id:"通信错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信错误"}},[t._v("#")]),t._v(" 通信错误")]),t._v(" "),a("p",[t._v("与服务器通信的错误，很多，比如没有编码数据")]),t._v(" "),a("h3",{attrs:{id:"区分致命-非致命错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区分致命-非致命错误"}},[t._v("#")]),t._v(" 区分致命/非致命错误")]),t._v(" "),a("p",[t._v("致命错误最好提醒用户刷新，非致命错误不必打断用户")]),t._v(" "),a("h3",{attrs:{id:"console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[t._v("#")]),t._v(" console")]),t._v(" "),a("p",[t._v("除了log，还有error，warn，info三种方法。error是红色的，warn是黄色的，info没试过。")]),t._v(" "),a("p",[t._v("后面看不动了。摆")])])}),[],!1,null,null,null);s.default=r.exports}}]);