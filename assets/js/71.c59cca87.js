(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{425:function(t,e,a){"use strict";a.r(e);var r=a(45),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"客户端检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端检测"}},[t._v("#")]),t._v(" 客户端检测")]),t._v(" "),a("p",[t._v("检测客户端以弥补不同客户端之间特性不同带来的差异")]),t._v(" "),a("h2",{attrs:{id:"能力检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#能力检测"}},[t._v("#")]),t._v(" 能力检测")]),t._v(" "),a("p",[t._v("识别浏览器的能力，例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('function getElement(id){\n    if(document.getElementById){\n        return document.getElementById(id);\n    } else if(document.all){\n        return document.all(id);\n    } else{\n        throw new Error("No way to retrieve element");\n    }\n}\n')])])]),a("p",[t._v("首先检测达成目的的最常用特性，保证代码最优化（可以避免测试多个条件）。必须测试实际要用到的特性，不能因为测试过某个特性而断定客户端类型从而直接使用该客户端的其他特性。\n检测的时候，尽量使用typeof，例如测试对象是否支持排序，光是检测是否存在sort是不够严谨的，因为拥有名为sort的属性的对象同样会对此测试为真，此时需要使用typeof测试sort是否为函数来确定。\n最后不应该使用一组能力测试断言浏览器类型，应该测试需要用到的所有特性。")]),t._v(" "),a("h2",{attrs:{id:"怪癖-用户代理检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怪癖-用户代理检测"}},[t._v("#")]),t._v(" 怪癖/用户代理检测")]),t._v(" "),a("h2",{attrs:{id:"涉及到早起浏览器的故事-后者依赖于用户代理字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#涉及到早起浏览器的故事-后者依赖于用户代理字符串"}},[t._v("#")]),t._v(" 涉及到早起浏览器的故事，后者依赖于用户代理字符串")]),t._v(" "),a("p",[t._v("在最后，红宝书给出了完整的检测代码")])])}),[],!1,null,null,null);e.default=n.exports}}]);